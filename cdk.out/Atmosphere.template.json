{
 "Resources": {
  "ServiceConfigurationBucket0AFE98AB": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:7827a8df",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Configuration/Bucket/Resource"
   }
  },
  "ServiceConfigurationBucketPolicy8438EC87": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "ServiceConfigurationBucket0AFE98AB"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceConfigurationBucket0AFE98AB",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ServiceConfigurationBucket0AFE98AB",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Configuration/Bucket/Policy/Resource"
   }
  },
  "ServiceConfigurationBucketAutoDeleteObjectsCustomResource8D722BE0": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "ServiceConfigurationBucket0AFE98AB"
    }
   },
   "DependsOn": [
    "ServiceConfigurationBucketPolicy8438EC87"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Configuration/Bucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "ServiceConfigurationDeploymentAwsCliLayerA3825660": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "09ee37fb9a746a9dea0618b3024913848346b4b63d08d3fae387b9a11ac83a01.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Configuration/Deployment/AwsCliLayer/Resource",
    "aws:asset:path": "asset.09ee37fb9a746a9dea0618b3024913848346b4b63d08d3fae387b9a11ac83a01.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "ServiceConfigurationDeploymentCustomResource85E0FDE9": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     }
    ],
    "SourceObjectKeys": [
     "f1907bc50c6063c7fe3c7ceb01e357214e3faead6de1f0f4ac25940f1635f0b6.zip"
    ],
    "SourceMarkers": [
     {}
    ],
    "DestinationBucketName": {
     "Ref": "ServiceConfigurationBucket0AFE98AB"
    },
    "Prune": true,
    "OutputObjectKeys": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Configuration/Deployment/CustomResource/Default"
   }
  },
  "ServiceEnvironmentsTableA5539EAF": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "account",
      "AttributeType": "S"
     },
     {
      "AttributeName": "region",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "account",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "region",
      "KeyType": "RANGE"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Environments/Table/Resource"
   }
  },
  "ServiceAllocationsTable90282FE8": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TimeToLiveSpecification": {
     "AttributeName": "ttl",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Allocations/Table/Resource"
   }
  },
  "ServiceCleanupVpc1CF7F08D": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "Atmosphere/Service/Cleanup/Vpc"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/Vpc/Resource"
   }
  },
  "ServiceCleanupVpcPublicSubnet1Subnet5E4EC94A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/17",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Atmosphere/Service/Cleanup/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ServiceCleanupVpc1CF7F08D"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/Vpc/PublicSubnet1/Subnet"
   }
  },
  "ServiceCleanupVpcPublicSubnet1RouteTable04924734": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Atmosphere/Service/Cleanup/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ServiceCleanupVpc1CF7F08D"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/Vpc/PublicSubnet1/RouteTable"
   }
  },
  "ServiceCleanupVpcPublicSubnet1RouteTableAssociation355BC759": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ServiceCleanupVpcPublicSubnet1RouteTable04924734"
    },
    "SubnetId": {
     "Ref": "ServiceCleanupVpcPublicSubnet1Subnet5E4EC94A"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/Vpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "ServiceCleanupVpcPublicSubnet1DefaultRoute1E3B7F07": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "ServiceCleanupVpcIGW2AFAE422"
    },
    "RouteTableId": {
     "Ref": "ServiceCleanupVpcPublicSubnet1RouteTable04924734"
    }
   },
   "DependsOn": [
    "ServiceCleanupVpcVPCGW2A94D261"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/Vpc/PublicSubnet1/DefaultRoute"
   }
  },
  "ServiceCleanupVpcPublicSubnet2Subnet8828B7EB": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/17",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Atmosphere/Service/Cleanup/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "ServiceCleanupVpc1CF7F08D"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/Vpc/PublicSubnet2/Subnet"
   }
  },
  "ServiceCleanupVpcPublicSubnet2RouteTable3AE8B789": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Atmosphere/Service/Cleanup/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "ServiceCleanupVpc1CF7F08D"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/Vpc/PublicSubnet2/RouteTable"
   }
  },
  "ServiceCleanupVpcPublicSubnet2RouteTableAssociationE1F4015E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ServiceCleanupVpcPublicSubnet2RouteTable3AE8B789"
    },
    "SubnetId": {
     "Ref": "ServiceCleanupVpcPublicSubnet2Subnet8828B7EB"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/Vpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "ServiceCleanupVpcPublicSubnet2DefaultRoute9263F8C5": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "ServiceCleanupVpcIGW2AFAE422"
    },
    "RouteTableId": {
     "Ref": "ServiceCleanupVpcPublicSubnet2RouteTable3AE8B789"
    }
   },
   "DependsOn": [
    "ServiceCleanupVpcVPCGW2A94D261"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/Vpc/PublicSubnet2/DefaultRoute"
   }
  },
  "ServiceCleanupVpcIGW2AFAE422": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Atmosphere/Service/Cleanup/Vpc"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/Vpc/IGW"
   }
  },
  "ServiceCleanupVpcVPCGW2A94D261": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "ServiceCleanupVpcIGW2AFAE422"
    },
    "VpcId": {
     "Ref": "ServiceCleanupVpc1CF7F08D"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/Vpc/VPCGW"
   }
  },
  "ServiceCleanupLogGroup80B0317A": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/LogGroup/Resource"
   }
  },
  "ServiceCleanupSecurityGroupB89D72D2": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Atmosphere/Service/Cleanup/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "ServiceCleanupVpc1CF7F08D"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/SecurityGroup/Resource"
   }
  },
  "ServiceCleanupCluster407E31B6": {
   "Type": "AWS::ECS::Cluster",
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/Cluster/Resource"
   }
  },
  "ServiceCleanupCluster4513B4CF": {
   "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
   "Properties": {
    "CapacityProviders": [
     "FARGATE",
     "FARGATE_SPOT"
    ],
    "Cluster": {
     "Ref": "ServiceCleanupCluster407E31B6"
    },
    "DefaultCapacityProviderStrategy": []
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/Cluster/Cluster"
   }
  },
  "ServiceCleanupTaskDefinitionTaskRoleFD09EED9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/TaskDefinition/TaskRole/Resource"
   }
  },
  "ServiceCleanupTaskDefinitionTaskRoleDefaultPolicy4DEE183E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": "arn:aws:iam::897395725265:role/CDKAtmosphereAdmin"
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": "arn:aws:iam::480359821526:role/CDKAtmosphereAdmin"
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": "arn:aws:iam::061039769633:role/CDKAtmosphereAdmin"
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": "arn:aws:iam::626635430101:role/CDKAtmosphereAdmin"
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceConfigurationBucket0AFE98AB",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ServiceConfigurationBucket0AFE98AB",
             "Arn"
            ]
           },
           "/configuration.json"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceAllocationsTable90282FE8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceEnvironmentsTableA5539EAF",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ServiceCleanupTaskDefinitionTaskRoleDefaultPolicy4DEE183E",
    "Roles": [
     {
      "Ref": "ServiceCleanupTaskDefinitionTaskRoleFD09EED9"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/TaskDefinition/TaskRole/DefaultPolicy/Resource"
   }
  },
  "ServiceCleanupTaskDefinition2916DB6A": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "CDK_ATMOSPHERE_ENVIRONMENTS_TABLE_NAME",
        "Value": {
         "Ref": "ServiceEnvironmentsTableA5539EAF"
        }
       },
       {
        "Name": "CDK_ATMOSPHERE_ALLOCATIONS_TABLE_NAME",
        "Value": {
         "Ref": "ServiceAllocationsTable90282FE8"
        }
       },
       {
        "Name": "CDK_ATMOSPHERE_CONFIGURATION_FILE_BUCKET",
        "Value": {
         "Ref": "ServiceConfigurationBucket0AFE98AB"
        }
       },
       {
        "Name": "CDK_ATMOSPHERE_CONFIGURATION_FILE_KEY",
        "Value": "configuration.json"
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:ab42902d0930cc56841e780fa067e623e1a9fbe4cf4b72a80121c94b80c770d6"
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "ServiceCleanupLogGroup80B0317A"
        },
        "awslogs-stream-prefix": "cleanup",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "main"
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "ServiceCleanupTaskDefinitionExecutionRole72F9C0CC",
      "Arn"
     ]
    },
    "Family": "AtmosphereServiceCleanupTaskDefinitionB4B659CE",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "RuntimePlatform": {
     "CpuArchitecture": "ARM64",
     "OperatingSystemFamily": "LINUX"
    },
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "ServiceCleanupTaskDefinitionTaskRoleFD09EED9",
      "Arn"
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/TaskDefinition/Resource"
   }
  },
  "ServiceCleanupTaskDefinitionExecutionRole72F9C0CC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/TaskDefinition/ExecutionRole/Resource"
   }
  },
  "ServiceCleanupTaskDefinitionExecutionRoleDefaultPolicyE01D5D99": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Sub": "cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}"
          }
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ServiceCleanupLogGroup80B0317A",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ServiceCleanupTaskDefinitionExecutionRoleDefaultPolicyE01D5D99",
    "Roles": [
     {
      "Ref": "ServiceCleanupTaskDefinitionExecutionRole72F9C0CC"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Cleanup/TaskDefinition/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "ServiceSchedulerRole32D44EB5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "scheduler.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Scheduler/Role/Resource"
   }
  },
  "ServiceSchedulerRoleDefaultPolicy90E5888E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceSchedulerCleanupTimeoutE22A09B7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ServiceSchedulerCleanupTimeoutE22A09B7",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceSchedulerAllocationTimeout48BDC6EA",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ServiceSchedulerAllocationTimeout48BDC6EA",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ServiceSchedulerDLQC0252AB1",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ServiceSchedulerRoleDefaultPolicy90E5888E",
    "Roles": [
     {
      "Ref": "ServiceSchedulerRole32D44EB5"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Scheduler/Role/DefaultPolicy/Resource"
   }
  },
  "ServiceSchedulerDLQC0252AB1": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "KmsMasterKeyId": "alias/aws/sqs"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Scheduler/DLQ/Resource"
   }
  },
  "ServiceSchedulerCleanupTimeoutServiceRoleADDD3812": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Scheduler/CleanupTimeout/ServiceRole/Resource"
   }
  },
  "ServiceSchedulerCleanupTimeoutServiceRoleDefaultPolicy73639583": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ServiceSchedulerDLQC0252AB1",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceEnvironmentsTableA5539EAF",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ServiceSchedulerCleanupTimeoutServiceRoleDefaultPolicy73639583",
    "Roles": [
     {
      "Ref": "ServiceSchedulerCleanupTimeoutServiceRoleADDD3812"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Scheduler/CleanupTimeout/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ServiceSchedulerCleanupTimeoutE22A09B7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "17b59f05e5d3b5150b9917eef90535435fc99cdd989a31a07a01ac15f2bf646d.zip"
    },
    "DeadLetterConfig": {
     "TargetArn": {
      "Fn::GetAtt": [
       "ServiceSchedulerDLQC0252AB1",
       "Arn"
      ]
     }
    },
    "Description": "src/cleanup-timeout/cleanup-timeout.lambda.ts",
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
      "CDK_ATMOSPHERE_ENVIRONMENTS_TABLE_NAME": {
       "Ref": "ServiceEnvironmentsTableA5539EAF"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ServiceSchedulerCleanupTimeoutServiceRoleADDD3812",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 60
   },
   "DependsOn": [
    "ServiceSchedulerCleanupTimeoutServiceRoleDefaultPolicy73639583",
    "ServiceSchedulerCleanupTimeoutServiceRoleADDD3812"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Scheduler/CleanupTimeout/Resource",
    "aws:asset:path": "asset.17b59f05e5d3b5150b9917eef90535435fc99cdd989a31a07a01ac15f2bf646d.lambda",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ServiceSchedulerAllocationTimeoutServiceRole75200407": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Scheduler/AllocationTimeout/ServiceRole/Resource"
   }
  },
  "ServiceSchedulerAllocationTimeoutServiceRoleDefaultPolicyAA9735BF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ServiceSchedulerDLQC0252AB1",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceAllocationsTable90282FE8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceEnvironmentsTableA5539EAF",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceDeallocateFunctionD4B9D163",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ServiceDeallocateFunctionD4B9D163",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ServiceSchedulerAllocationTimeoutServiceRoleDefaultPolicyAA9735BF",
    "Roles": [
     {
      "Ref": "ServiceSchedulerAllocationTimeoutServiceRole75200407"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Scheduler/AllocationTimeout/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ServiceSchedulerAllocationTimeout48BDC6EA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e262a7909623f9ffaac02923be5f116945c57ff7074f7ba6b001d8fb796f4597.zip"
    },
    "DeadLetterConfig": {
     "TargetArn": {
      "Fn::GetAtt": [
       "ServiceSchedulerDLQC0252AB1",
       "Arn"
      ]
     }
    },
    "Description": "src/allocation-timeout/allocation-timeout.lambda.ts",
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
      "CDK_ATMOSPHERE_DEALLOCATE_FUNCTION_NAME": {
       "Ref": "ServiceDeallocateFunctionD4B9D163"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ServiceSchedulerAllocationTimeoutServiceRole75200407",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 60
   },
   "DependsOn": [
    "ServiceSchedulerAllocationTimeoutServiceRoleDefaultPolicyAA9735BF",
    "ServiceSchedulerAllocationTimeoutServiceRole75200407"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Scheduler/AllocationTimeout/Resource",
    "aws:asset:path": "asset.e262a7909623f9ffaac02923be5f116945c57ff7074f7ba6b001d8fb796f4597.lambda",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ServiceAllocateFunctionServiceRole8E6AC650": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Allocate/Function/ServiceRole/Resource"
   }
  },
  "ServiceAllocateFunctionServiceRoleDefaultPolicy8E7498FB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceConfigurationBucket0AFE98AB",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ServiceConfigurationBucket0AFE98AB",
             "Arn"
            ]
           },
           "/configuration.json"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceEnvironmentsTableA5539EAF",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceAllocationsTable90282FE8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "scheduler:CreateSchedule",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ServiceSchedulerRole32D44EB5",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": "arn:aws:iam::897395725265:role/CDKAtmosphereAdmin"
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": "arn:aws:iam::480359821526:role/CDKAtmosphereAdmin"
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": "arn:aws:iam::061039769633:role/CDKAtmosphereAdmin"
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": "arn:aws:iam::626635430101:role/CDKAtmosphereAdmin"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ServiceAllocateFunctionServiceRoleDefaultPolicy8E7498FB",
    "Roles": [
     {
      "Ref": "ServiceAllocateFunctionServiceRole8E6AC650"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Allocate/Function/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ServiceAllocateFunction89756C61": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a6f76c0219df00b6a8ff772f416d57ccd04dcb1a726f9b3a5db191644cc2c86a.zip"
    },
    "Description": "src/allocate/allocate.lambda.ts",
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
      "CDK_ATMOSPHERE_CONFIGURATION_FILE_BUCKET": {
       "Ref": "ServiceConfigurationBucket0AFE98AB"
      },
      "CDK_ATMOSPHERE_CONFIGURATION_FILE_KEY": "configuration.json",
      "CDK_ATMOSPHERE_ENVIRONMENTS_TABLE_NAME": {
       "Ref": "ServiceEnvironmentsTableA5539EAF"
      },
      "CDK_ATMOSPHERE_ALLOCATIONS_TABLE_NAME": {
       "Ref": "ServiceAllocationsTable90282FE8"
      },
      "CDK_ATMOSPHERE_SCHEDULER_DLQ_ARN": {
       "Fn::GetAtt": [
        "ServiceSchedulerDLQC0252AB1",
        "Arn"
       ]
      },
      "CDK_ATMOSPHERE_SCHEDULER_ROLE_ARN": {
       "Fn::GetAtt": [
        "ServiceSchedulerRole32D44EB5",
        "Arn"
       ]
      },
      "CDK_ATMOSPHERE_ALLOCATION_TIMEOUT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "ServiceSchedulerAllocationTimeout48BDC6EA",
        "Arn"
       ]
      },
      "CDK_ATMOSPHERE_CLEANUP_TIMEOUT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "ServiceSchedulerCleanupTimeoutE22A09B7",
        "Arn"
       ]
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ServiceAllocateFunctionServiceRole8E6AC650",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 60
   },
   "DependsOn": [
    "ServiceAllocateFunctionServiceRoleDefaultPolicy8E7498FB",
    "ServiceAllocateFunctionServiceRole8E6AC650"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Allocate/Function/Resource",
    "aws:asset:path": "asset.a6f76c0219df00b6a8ff772f416d57ccd04dcb1a726f9b3a5db191644cc2c86a.lambda",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ServiceDeallocateFunctionServiceRole17EA63A1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Deallocate/Function/ServiceRole/Resource"
   }
  },
  "ServiceDeallocateFunctionServiceRoleDefaultPolicy4101B0D4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceAllocationsTable90282FE8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceEnvironmentsTableA5539EAF",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "scheduler:CreateSchedule",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "iam:PassRole",
       "Condition": {
        "StringLike": {
         "iam:PassedToService": "ecs-tasks.amazonaws.com"
        }
       },
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceCleanupTaskDefinitionTaskRoleFD09EED9",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ServiceCleanupTaskDefinitionExecutionRole72F9C0CC",
          "Arn"
         ]
        }
       ]
      },
      {
       "Action": "ecs:RunTask",
       "Effect": "Allow",
       "Resource": {
        "Ref": "ServiceCleanupTaskDefinition2916DB6A"
       }
      },
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ServiceSchedulerRole32D44EB5",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ServiceDeallocateFunctionServiceRoleDefaultPolicy4101B0D4",
    "Roles": [
     {
      "Ref": "ServiceDeallocateFunctionServiceRole17EA63A1"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Deallocate/Function/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ServiceDeallocateFunctionD4B9D163": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "d97808e7691ed25a8776e9b7e456b484fa8a930ca5bdb0c52e26a5ebc498109e.zip"
    },
    "Description": "src/deallocate/deallocate.lambda.ts",
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
      "CDK_ATMOSPHERE_ENVIRONMENTS_TABLE_NAME": {
       "Ref": "ServiceEnvironmentsTableA5539EAF"
      },
      "CDK_ATMOSPHERE_ALLOCATIONS_TABLE_NAME": {
       "Ref": "ServiceAllocationsTable90282FE8"
      },
      "CDK_ATMOSPHERE_SCHEDULER_DLQ_ARN": {
       "Fn::GetAtt": [
        "ServiceSchedulerDLQC0252AB1",
        "Arn"
       ]
      },
      "CDK_ATMOSPHERE_SCHEDULER_ROLE_ARN": {
       "Fn::GetAtt": [
        "ServiceSchedulerRole32D44EB5",
        "Arn"
       ]
      },
      "CDK_ATMOSPHERE_CLEANUP_TIMEOUT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "ServiceSchedulerCleanupTimeoutE22A09B7",
        "Arn"
       ]
      },
      "CDK_ATMOSPHERE_CLEANUP_CLUSTER_ARN": {
       "Fn::GetAtt": [
        "ServiceCleanupCluster407E31B6",
        "Arn"
       ]
      },
      "CDK_ATMOSPHERE_CLEANUP_TASK_DEFINITION_ARN": {
       "Ref": "ServiceCleanupTaskDefinition2916DB6A"
      },
      "CDK_ATMOSPHERE_CLEANUP_TASK_SUBNET_ID": {
       "Ref": "ServiceCleanupVpcPublicSubnet1Subnet5E4EC94A"
      },
      "CDK_ATMOSPHERE_CLEANUP_TASK_SECURITY_GROUP_ID": {
       "Fn::GetAtt": [
        "ServiceCleanupSecurityGroupB89D72D2",
        "GroupId"
       ]
      },
      "CDK_ATMOSPHERE_CLEANUP_TASK_CONTAINER_NAME": "main"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ServiceDeallocateFunctionServiceRole17EA63A1",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 60
   },
   "DependsOn": [
    "ServiceDeallocateFunctionServiceRoleDefaultPolicy4101B0D4",
    "ServiceDeallocateFunctionServiceRole17EA63A1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Deallocate/Function/Resource",
    "aws:asset:path": "asset.d97808e7691ed25a8776e9b7e456b484fa8a930ca5bdb0c52e26a5ebc498109e.lambda",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ServiceEndpointApi2A542AE5": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "RESTful endpoint for the Atmosphere service",
    "Name": "Atmosphere",
    "Policy": {
     "Statement": [
      {
       "Action": "execute-api:Invoke",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       },
       "Resource": [
        "execute-api:/prod/POST/allocations",
        "execute-api:/prod/DELETE/allocations/{id}"
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Endpoint/Api/Resource"
   }
  },
  "ServiceEndpointApiCloudWatchRoleBEB0B371": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Endpoint/Api/CloudWatchRole/Resource"
   }
  },
  "ServiceEndpointApiAccount24AE8D62": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "ServiceEndpointApiCloudWatchRoleBEB0B371",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "ServiceEndpointApi2A542AE5"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Endpoint/Api/Account"
   }
  },
  "ServiceEndpointApiDeploymentC7832B3Afd09d28315fb4b9cc58866961b7808da": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "RESTful endpoint for the Atmosphere service",
    "RestApiId": {
     "Ref": "ServiceEndpointApi2A542AE5"
    }
   },
   "DependsOn": [
    "ServiceEndpointApiallocationsidDELETEC4BCECCE",
    "ServiceEndpointApiallocationsidADAE0016",
    "ServiceEndpointApiallocationsPOSTC1225F1E",
    "ServiceEndpointApiallocationsA66E951C"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Endpoint/Api/Deployment/Resource"
   }
  },
  "ServiceEndpointApiDeploymentStageprodFA4E4D0F": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "ServiceEndpointApiDeploymentC7832B3Afd09d28315fb4b9cc58866961b7808da"
    },
    "RestApiId": {
     "Ref": "ServiceEndpointApi2A542AE5"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "ServiceEndpointApiAccount24AE8D62"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Endpoint/Api/DeploymentStage.prod/Resource"
   }
  },
  "ServiceEndpointApiallocationsA66E951C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ServiceEndpointApi2A542AE5",
      "RootResourceId"
     ]
    },
    "PathPart": "allocations",
    "RestApiId": {
     "Ref": "ServiceEndpointApi2A542AE5"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Endpoint/Api/Default/allocations/Resource"
   }
  },
  "ServiceEndpointApiallocationsPOSTApiPermissionAtmosphereServiceEndpointApi6645EA9EPOSTallocations4F1AF656": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ServiceAllocateFunction89756C61",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ServiceEndpointApi2A542AE5"
       },
       "/",
       {
        "Ref": "ServiceEndpointApiDeploymentStageprodFA4E4D0F"
       },
       "/POST/allocations"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Endpoint/Api/Default/allocations/POST/ApiPermission.AtmosphereServiceEndpointApi6645EA9E.POST..allocations"
   }
  },
  "ServiceEndpointApiallocationsPOSTApiPermissionTestAtmosphereServiceEndpointApi6645EA9EPOSTallocationsCADD701D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ServiceAllocateFunction89756C61",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ServiceEndpointApi2A542AE5"
       },
       "/test-invoke-stage/POST/allocations"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Endpoint/Api/Default/allocations/POST/ApiPermission.Test.AtmosphereServiceEndpointApi6645EA9E.POST..allocations"
   }
  },
  "ServiceEndpointApiallocationsPOSTC1225F1E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "AWS_IAM",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ServiceAllocateFunction89756C61",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ServiceEndpointApiallocationsA66E951C"
    },
    "RestApiId": {
     "Ref": "ServiceEndpointApi2A542AE5"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Endpoint/Api/Default/allocations/POST/Resource"
   }
  },
  "ServiceEndpointApiallocationsidADAE0016": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ServiceEndpointApiallocationsA66E951C"
    },
    "PathPart": "{id}",
    "RestApiId": {
     "Ref": "ServiceEndpointApi2A542AE5"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Endpoint/Api/Default/allocations/{id}/Resource"
   }
  },
  "ServiceEndpointApiallocationsidDELETEApiPermissionAtmosphereServiceEndpointApi6645EA9EDELETEallocationsid3FD71C6A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ServiceDeallocateFunctionD4B9D163",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ServiceEndpointApi2A542AE5"
       },
       "/",
       {
        "Ref": "ServiceEndpointApiDeploymentStageprodFA4E4D0F"
       },
       "/DELETE/allocations/*"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Endpoint/Api/Default/allocations/{id}/DELETE/ApiPermission.AtmosphereServiceEndpointApi6645EA9E.DELETE..allocations.{id}"
   }
  },
  "ServiceEndpointApiallocationsidDELETEApiPermissionTestAtmosphereServiceEndpointApi6645EA9EDELETEallocationsid4C4FC763": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ServiceDeallocateFunctionD4B9D163",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ServiceEndpointApi2A542AE5"
       },
       "/test-invoke-stage/DELETE/allocations/*"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Endpoint/Api/Default/allocations/{id}/DELETE/ApiPermission.Test.AtmosphereServiceEndpointApi6645EA9E.DELETE..allocations.{id}"
   }
  },
  "ServiceEndpointApiallocationsidDELETEC4BCECCE": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "AWS_IAM",
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ServiceDeallocateFunctionD4B9D163",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ServiceEndpointApiallocationsidADAE0016"
    },
    "RestApiId": {
     "Ref": "ServiceEndpointApi2A542AE5"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Service/Endpoint/Api/Default/allocations/{id}/DELETE/Resource"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "ServiceConfigurationBucket0AFE98AB"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ServiceConfigurationBucket0AFE98AB",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ServiceConfigurationBucket0AFE98AB",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "c6358465bf49dfae556bb430bf9c81fa578c221b82c308e3707901b1dd654762.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "ServiceConfigurationDeploymentAwsCliLayerA3825660"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Atmosphere/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.c6358465bf49dfae556bb430bf9c81fa578c221b82c308e3707901b1dd654762",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21T227bMAz9lr6r2pIM2F5TBy0KtFiWDHkNGJl11diip0sDw/C/j5KcOO32pMNDiYc3zeXs+0LObuDkblV5vK31QfZbD+oomNr3biH7u6CO6EXxYkaUjzXVWnUTPdrZuAOHg3CLfV9iW1PXoPEyu1YXQoBz6J1cxmMQNTSHEmTPEZ+gQ7tD6zQZsdWmqtGTuQ9G+chcAF+9xmu0jXbx0SDKzkBDJZfzGw41RncCg0A1l/2uVZHarQuxDgfOfBsOJlc5oQ0Fj5fnmZ84TpuUhrN4ckTwaDxavvkAHk/QjTKjtfTc3NdU/RZVsNp3D5ZCmwSuCe4HVU72T1RdLpxxrIFdRR0cS0XPv7CAFhQHW1t61yXaq2yduAdbQSzDHVf4oo0+F/GZIeNBG7QTNwgNjew3lJuSzmkVMor52f043RXx1O1jAxWmQUef3GBLTnuyXdwU4f5wOb8ChhQzgUFAq6vcNJZD55etTooTXCpFgTt5tVLMXlm8yVWeXQL8lIJVmDTPxhgz42f0r1RGKqNhEAW3k5r/3s4bu6/jtu75v6hay+XJFbVOCyxSvVGaN/iD3s/g25CSfYa2jd6PKuehpUTjTMmUY/cNlSjf3Jf32Q85/yq/3bw5rW8tt0E3KDf5/Au3i7M21wMAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "Atmosphere/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "ServiceEndpointApiEndpointBA9E7F31": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ServiceEndpointApi2A542AE5"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ServiceEndpointApiDeploymentStageprodFA4E4D0F"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-isoe-west-1": {
    "value": "nodejs18.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-gov-east-1": {
    "value": "nodejs18.x"
   },
   "us-gov-west-1": {
    "value": "nodejs18.x"
   },
   "us-iso-east-1": {
    "value": "nodejs18.x"
   },
   "us-iso-west-1": {
    "value": "nodejs18.x"
   },
   "us-isob-east-1": {
    "value": "nodejs18.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}