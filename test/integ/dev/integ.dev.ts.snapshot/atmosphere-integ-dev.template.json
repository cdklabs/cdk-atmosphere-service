{
 "Resources": {
  "AtmosphereIntegTestAtmosphereConfigurationBucket97338F91": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:2494bdb9",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereConfigurationBucketPolicyAB4E318D": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "AtmosphereIntegTestAtmosphereConfigurationBucket97338F91"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "AtmosphereIntegTestAtmosphereConfigurationBucket97338F91",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AtmosphereIntegTestAtmosphereConfigurationBucket97338F91",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereConfigurationBucketAutoDeleteObjectsCustomResourceEA093561": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "AtmosphereIntegTestAtmosphereConfigurationBucket97338F91"
    }
   },
   "DependsOn": [
    "AtmosphereIntegTestAtmosphereConfigurationBucketPolicyAB4E318D"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereConfigurationDeploymentAwsCliLayerF1F55BB3": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "09ee37fb9a746a9dea0618b3024913848346b4b63d08d3fae387b9a11ac83a01.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereConfigurationDeploymentCustomResource8630236A": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     }
    ],
    "SourceObjectKeys": [
     "cebdfac90561f1acb71b7674a202dd6259b96b0f85cd93f43442476295ee66f4.zip"
    ],
    "SourceMarkers": [
     {
      "<<marker:0xbaba:0>>": {
       "Ref": "AWS::AccountId"
      },
      "<<marker:0xbaba:1>>": {
       "Fn::GetAtt": [
        "AdminC75D2A91",
        "Arn"
       ]
      }
     }
    ],
    "DestinationBucketName": {
     "Ref": "AtmosphereIntegTestAtmosphereConfigurationBucket97338F91"
    },
    "Prune": true,
    "OutputObjectKeys": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereEnvironmentsTableA3B14751": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "account",
      "AttributeType": "S"
     },
     {
      "AttributeName": "region",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "account",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "region",
      "KeyType": "RANGE"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereAllocationsTable724969BB": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TimeToLiveSpecification": {
     "AttributeName": "ttl",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereAllocateFunctionServiceRole9DEC8407": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereAllocateFunctionServiceRoleDefaultPolicy1364A9C0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AtmosphereIntegTestAtmosphereConfigurationBucket97338F91",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AtmosphereIntegTestAtmosphereConfigurationBucket97338F91",
             "Arn"
            ]
           },
           "/configuration.json"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AtmosphereIntegTestAtmosphereAllocationsTable724969BB",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "AtmosphereIntegTestAtmosphereEnvironmentsTableA3B14751",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "AdminC75D2A91",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AtmosphereIntegTestAtmosphereAllocateFunctionServiceRoleDefaultPolicy1364A9C0",
    "Roles": [
     {
      "Ref": "AtmosphereIntegTestAtmosphereAllocateFunctionServiceRole9DEC8407"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereAllocateFunction4ABA0267": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "f8a6c46f3a2cb037cf14bee7591497b5ef9e597ecd5b455ba41514af48f0fea9.zip"
    },
    "Description": "src/allocate/allocate.lambda.ts",
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
      "CDK_ATMOSPHERE_CONFIGURATION_FILE_BUCKET": {
       "Ref": "AtmosphereIntegTestAtmosphereConfigurationBucket97338F91"
      },
      "CDK_ATMOSPHERE_CONFIGURATION_FILE_KEY": "configuration.json",
      "CDK_ATMOSPHERE_ENVIRONMENTS_TABLE_NAME": {
       "Ref": "AtmosphereIntegTestAtmosphereEnvironmentsTableA3B14751"
      },
      "CDK_ATMOSPHERE_ALLOCATIONS_TABLE_NAME": {
       "Ref": "AtmosphereIntegTestAtmosphereAllocationsTable724969BB"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AtmosphereIntegTestAtmosphereAllocateFunctionServiceRole9DEC8407",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "AtmosphereIntegTestAtmosphereAllocateFunctionServiceRoleDefaultPolicy1364A9C0",
    "AtmosphereIntegTestAtmosphereAllocateFunctionServiceRole9DEC8407"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereDeallocateFunctionServiceRole842CBDEC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereDeallocateFunctionServiceRoleDefaultPolicy22E73639": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AtmosphereIntegTestAtmosphereAllocationsTable724969BB",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "AtmosphereIntegTestAtmosphereEnvironmentsTableA3B14751",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AtmosphereIntegTestAtmosphereDeallocateFunctionServiceRoleDefaultPolicy22E73639",
    "Roles": [
     {
      "Ref": "AtmosphereIntegTestAtmosphereDeallocateFunctionServiceRole842CBDEC"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereDeallocateFunction07522CDB": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "000c590f26b879db64bc73737d88ca0e57ba98a73b102e1f2b6cc06365db0697.zip"
    },
    "Description": "src/deallocate/deallocate.lambda.ts",
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
      "CDK_ATMOSPHERE_ENVIRONMENTS_TABLE_NAME": {
       "Ref": "AtmosphereIntegTestAtmosphereEnvironmentsTableA3B14751"
      },
      "CDK_ATMOSPHERE_ALLOCATIONS_TABLE_NAME": {
       "Ref": "AtmosphereIntegTestAtmosphereAllocationsTable724969BB"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AtmosphereIntegTestAtmosphereDeallocateFunctionServiceRole842CBDEC",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "AtmosphereIntegTestAtmosphereDeallocateFunctionServiceRoleDefaultPolicy22E73639",
    "AtmosphereIntegTestAtmosphereDeallocateFunctionServiceRole842CBDEC"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereEndpointApi786BAA32": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "RESTful endpoint for the Atmosphere service",
    "Name": "Atmosphere",
    "Policy": {
     "Statement": [
      {
       "Action": "execute-api:Invoke",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       },
       "Resource": [
        "execute-api:/prod/DELETE/allocations/{id}",
        "execute-api:/prod/POST/allocations"
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereEndpointApiDeployment07D554B33e9d6eddab0c5c9302e367173f86c145": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "RESTful endpoint for the Atmosphere service",
    "RestApiId": {
     "Ref": "AtmosphereIntegTestAtmosphereEndpointApi786BAA32"
    }
   },
   "DependsOn": [
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsidDELETEC6E25D33",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsid11F044C0",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsPOST58C55F36",
    "AtmosphereIntegTestAtmosphereEndpointApiallocations688D98A7"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereEndpointApiDeploymentStageprod7AB3668E": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "AtmosphereIntegTestAtmosphereEndpointApiDeployment07D554B33e9d6eddab0c5c9302e367173f86c145"
    },
    "RestApiId": {
     "Ref": "AtmosphereIntegTestAtmosphereEndpointApi786BAA32"
    },
    "StageName": "prod"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereEndpointApiallocations688D98A7": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "AtmosphereIntegTestAtmosphereEndpointApi786BAA32",
      "RootResourceId"
     ]
    },
    "PathPart": "allocations",
    "RestApiId": {
     "Ref": "AtmosphereIntegTestAtmosphereEndpointApi786BAA32"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereEndpointApiallocationsPOSTApiPermissionatmosphereintegdevAtmosphereIntegTestAtmosphereEndpointApiE564D7F4POSTallocationsA0F98ADA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AtmosphereIntegTestAtmosphereAllocateFunction4ABA0267",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AtmosphereIntegTestAtmosphereEndpointApi786BAA32"
       },
       "/",
       {
        "Ref": "AtmosphereIntegTestAtmosphereEndpointApiDeploymentStageprod7AB3668E"
       },
       "/POST/allocations"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereEndpointApiallocationsPOSTApiPermissionTestatmosphereintegdevAtmosphereIntegTestAtmosphereEndpointApiE564D7F4POSTallocations30BB20D4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AtmosphereIntegTestAtmosphereAllocateFunction4ABA0267",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AtmosphereIntegTestAtmosphereEndpointApi786BAA32"
       },
       "/test-invoke-stage/POST/allocations"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereEndpointApiallocationsPOST58C55F36": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "AWS_IAM",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AtmosphereIntegTestAtmosphereAllocateFunction4ABA0267",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AtmosphereIntegTestAtmosphereEndpointApiallocations688D98A7"
    },
    "RestApiId": {
     "Ref": "AtmosphereIntegTestAtmosphereEndpointApi786BAA32"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereEndpointApiallocationsid11F044C0": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AtmosphereIntegTestAtmosphereEndpointApiallocations688D98A7"
    },
    "PathPart": "{id}",
    "RestApiId": {
     "Ref": "AtmosphereIntegTestAtmosphereEndpointApi786BAA32"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereEndpointApiallocationsidDELETEApiPermissionatmosphereintegdevAtmosphereIntegTestAtmosphereEndpointApiE564D7F4DELETEallocationsid6F5C2E21": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AtmosphereIntegTestAtmosphereDeallocateFunction07522CDB",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AtmosphereIntegTestAtmosphereEndpointApi786BAA32"
       },
       "/",
       {
        "Ref": "AtmosphereIntegTestAtmosphereEndpointApiDeploymentStageprod7AB3668E"
       },
       "/DELETE/allocations/*"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereEndpointApiallocationsidDELETEApiPermissionTestatmosphereintegdevAtmosphereIntegTestAtmosphereEndpointApiE564D7F4DELETEallocationsid785D4B4C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AtmosphereIntegTestAtmosphereDeallocateFunction07522CDB",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AtmosphereIntegTestAtmosphereEndpointApi786BAA32"
       },
       "/test-invoke-stage/DELETE/allocations/*"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAtmosphereEndpointApiallocationsidDELETEC6E25D33": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "AWS_IAM",
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AtmosphereIntegTestAtmosphereDeallocateFunction07522CDB",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AtmosphereIntegTestAtmosphereEndpointApiallocationsid11F044C0"
    },
    "RestApiId": {
     "Ref": "AtmosphereIntegTestAtmosphereEndpointApi786BAA32"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAssertServiceRole84189FB3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "AtmosphereIntegTestAtmosphereAllocateFunction4ABA0267",
    "AtmosphereIntegTestAtmosphereAllocateFunctionServiceRoleDefaultPolicy1364A9C0",
    "AtmosphereIntegTestAtmosphereAllocateFunctionServiceRole9DEC8407",
    "AtmosphereIntegTestAtmosphereAllocationsTable724969BB",
    "AtmosphereIntegTestAtmosphereConfigurationBucketAutoDeleteObjectsCustomResourceEA093561",
    "AtmosphereIntegTestAtmosphereConfigurationBucketPolicyAB4E318D",
    "AtmosphereIntegTestAtmosphereConfigurationBucket97338F91",
    "AtmosphereIntegTestAtmosphereConfigurationDeploymentAwsCliLayerF1F55BB3",
    "AtmosphereIntegTestAtmosphereConfigurationDeploymentCustomResource8630236A",
    "AtmosphereIntegTestAtmosphereDeallocateFunction07522CDB",
    "AtmosphereIntegTestAtmosphereDeallocateFunctionServiceRoleDefaultPolicy22E73639",
    "AtmosphereIntegTestAtmosphereDeallocateFunctionServiceRole842CBDEC",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsidDELETEApiPermissionatmosphereintegdevAtmosphereIntegTestAtmosphereEndpointApiE564D7F4DELETEallocationsid6F5C2E21",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsidDELETEApiPermissionTestatmosphereintegdevAtmosphereIntegTestAtmosphereEndpointApiE564D7F4DELETEallocationsid785D4B4C",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsidDELETEC6E25D33",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsid11F044C0",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsPOSTApiPermissionatmosphereintegdevAtmosphereIntegTestAtmosphereEndpointApiE564D7F4POSTallocationsA0F98ADA",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsPOSTApiPermissionTestatmosphereintegdevAtmosphereIntegTestAtmosphereEndpointApiE564D7F4POSTallocations30BB20D4",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsPOST58C55F36",
    "AtmosphereIntegTestAtmosphereEndpointApiallocations688D98A7",
    "AtmosphereIntegTestAtmosphereEndpointApiDeployment07D554B33e9d6eddab0c5c9302e367173f86c145",
    "AtmosphereIntegTestAtmosphereEndpointApiDeploymentStageprod7AB3668E",
    "AtmosphereIntegTestAtmosphereEndpointApi786BAA32",
    "AtmosphereIntegTestAtmosphereEnvironmentsTableA3B14751"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAssertServiceRoleDefaultPolicy833CF797": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "apigateway:*",
        "dynamodb:*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AtmosphereIntegTestAssertServiceRoleDefaultPolicy833CF797",
    "Roles": [
     {
      "Ref": "AtmosphereIntegTestAssertServiceRole84189FB3"
     }
    ]
   },
   "DependsOn": [
    "AtmosphereIntegTestAtmosphereAllocateFunction4ABA0267",
    "AtmosphereIntegTestAtmosphereAllocateFunctionServiceRoleDefaultPolicy1364A9C0",
    "AtmosphereIntegTestAtmosphereAllocateFunctionServiceRole9DEC8407",
    "AtmosphereIntegTestAtmosphereAllocationsTable724969BB",
    "AtmosphereIntegTestAtmosphereConfigurationBucketAutoDeleteObjectsCustomResourceEA093561",
    "AtmosphereIntegTestAtmosphereConfigurationBucketPolicyAB4E318D",
    "AtmosphereIntegTestAtmosphereConfigurationBucket97338F91",
    "AtmosphereIntegTestAtmosphereConfigurationDeploymentAwsCliLayerF1F55BB3",
    "AtmosphereIntegTestAtmosphereConfigurationDeploymentCustomResource8630236A",
    "AtmosphereIntegTestAtmosphereDeallocateFunction07522CDB",
    "AtmosphereIntegTestAtmosphereDeallocateFunctionServiceRoleDefaultPolicy22E73639",
    "AtmosphereIntegTestAtmosphereDeallocateFunctionServiceRole842CBDEC",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsidDELETEApiPermissionatmosphereintegdevAtmosphereIntegTestAtmosphereEndpointApiE564D7F4DELETEallocationsid6F5C2E21",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsidDELETEApiPermissionTestatmosphereintegdevAtmosphereIntegTestAtmosphereEndpointApiE564D7F4DELETEallocationsid785D4B4C",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsidDELETEC6E25D33",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsid11F044C0",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsPOSTApiPermissionatmosphereintegdevAtmosphereIntegTestAtmosphereEndpointApiE564D7F4POSTallocationsA0F98ADA",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsPOSTApiPermissionTestatmosphereintegdevAtmosphereIntegTestAtmosphereEndpointApiE564D7F4POSTallocations30BB20D4",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsPOST58C55F36",
    "AtmosphereIntegTestAtmosphereEndpointApiallocations688D98A7",
    "AtmosphereIntegTestAtmosphereEndpointApiDeployment07D554B33e9d6eddab0c5c9302e367173f86c145",
    "AtmosphereIntegTestAtmosphereEndpointApiDeploymentStageprod7AB3668E",
    "AtmosphereIntegTestAtmosphereEndpointApi786BAA32",
    "AtmosphereIntegTestAtmosphereEnvironmentsTableA3B14751"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AtmosphereIntegTestAssertBF67A3D0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "851c4fd76be86b1a10fad2a23112d563d29952bd9d891966b8a57e1fd0c9b67e.zip"
    },
    "Description": "test/integ/dev/assert.lambda.ts",
    "Environment": {
     "Variables": {
      "CDK_ATMOSPHERE_INTEG": "true"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AtmosphereIntegTestAssertServiceRole84189FB3",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 60
   },
   "DependsOn": [
    "AtmosphereIntegTestAssertServiceRoleDefaultPolicy833CF797",
    "AtmosphereIntegTestAssertServiceRole84189FB3",
    "AtmosphereIntegTestAtmosphereAllocateFunction4ABA0267",
    "AtmosphereIntegTestAtmosphereAllocateFunctionServiceRoleDefaultPolicy1364A9C0",
    "AtmosphereIntegTestAtmosphereAllocateFunctionServiceRole9DEC8407",
    "AtmosphereIntegTestAtmosphereAllocationsTable724969BB",
    "AtmosphereIntegTestAtmosphereConfigurationBucketAutoDeleteObjectsCustomResourceEA093561",
    "AtmosphereIntegTestAtmosphereConfigurationBucketPolicyAB4E318D",
    "AtmosphereIntegTestAtmosphereConfigurationBucket97338F91",
    "AtmosphereIntegTestAtmosphereConfigurationDeploymentAwsCliLayerF1F55BB3",
    "AtmosphereIntegTestAtmosphereConfigurationDeploymentCustomResource8630236A",
    "AtmosphereIntegTestAtmosphereDeallocateFunction07522CDB",
    "AtmosphereIntegTestAtmosphereDeallocateFunctionServiceRoleDefaultPolicy22E73639",
    "AtmosphereIntegTestAtmosphereDeallocateFunctionServiceRole842CBDEC",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsidDELETEApiPermissionatmosphereintegdevAtmosphereIntegTestAtmosphereEndpointApiE564D7F4DELETEallocationsid6F5C2E21",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsidDELETEApiPermissionTestatmosphereintegdevAtmosphereIntegTestAtmosphereEndpointApiE564D7F4DELETEallocationsid785D4B4C",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsidDELETEC6E25D33",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsid11F044C0",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsPOSTApiPermissionatmosphereintegdevAtmosphereIntegTestAtmosphereEndpointApiE564D7F4POSTallocationsA0F98ADA",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsPOSTApiPermissionTestatmosphereintegdevAtmosphereIntegTestAtmosphereEndpointApiE564D7F4POSTallocations30BB20D4",
    "AtmosphereIntegTestAtmosphereEndpointApiallocationsPOST58C55F36",
    "AtmosphereIntegTestAtmosphereEndpointApiallocations688D98A7",
    "AtmosphereIntegTestAtmosphereEndpointApiDeployment07D554B33e9d6eddab0c5c9302e367173f86c145",
    "AtmosphereIntegTestAtmosphereEndpointApiDeploymentStageprod7AB3668E",
    "AtmosphereIntegTestAtmosphereEndpointApi786BAA32",
    "AtmosphereIntegTestAtmosphereEnvironmentsTableA3B14751"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AdminC75D2A91": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AdministratorAccess"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "AtmosphereIntegTestAtmosphereConfigurationBucket97338F91"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AtmosphereIntegTestAtmosphereConfigurationBucket97338F91",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AtmosphereIntegTestAtmosphereConfigurationBucket97338F91",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "c6358465bf49dfae556bb430bf9c81fa578c221b82c308e3707901b1dd654762.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "AtmosphereIntegTestAtmosphereConfigurationDeploymentAwsCliLayerF1F55BB3"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  }
 },
 "Outputs": {
  "AtmosphereIntegTestAtmosphereEndpointApiEndpoint2C7EF6F8": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AtmosphereIntegTestAtmosphereEndpointApi786BAA32"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AtmosphereIntegTestAtmosphereEndpointApiDeploymentStageprod7AB3668E"
      },
      "/"
     ]
    ]
   }
  },
  "ExportsOutputRefAtmosphereIntegTestAssertBF67A3D0004A1435": {
   "Value": {
    "Ref": "AtmosphereIntegTestAssertBF67A3D0"
   },
   "Export": {
    "Name": "atmosphere-integ-dev:ExportsOutputRefAtmosphereIntegTestAssertBF67A3D0004A1435"
   }
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-isoe-west-1": {
    "value": "nodejs18.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-gov-east-1": {
    "value": "nodejs18.x"
   },
   "us-gov-west-1": {
    "value": "nodejs18.x"
   },
   "us-iso-east-1": {
    "value": "nodejs18.x"
   },
   "us-iso-west-1": {
    "value": "nodejs18.x"
   },
   "us-isob-east-1": {
    "value": "nodejs18.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}